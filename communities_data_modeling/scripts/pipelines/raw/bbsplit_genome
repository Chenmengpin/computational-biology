#!/bin/sh
#
#SBATCH --job-name=bbsplit_ambig_all
#SBATCH --time=1000:00
#SBATCH --nodes=4
#SBATCH --ntasks=1

# use bbmap to align bbsplit reads output
# htseq count
# gff files generated by PATRIC
# assemblies generated by SPades and plasmid SPades

cd /data/dragon/mohameam/RNAseq/
module load compilers-extra oracle-java/1.8.0.31 gcc perl
export PATH=/data/dragon/mohameam/asoft/bbmap/:$PATH
export PATH=/data/dragon/mohameam/asfot/HTSeq-0.6.1/:$PATH

# bbsplit
# VCH
bbsplit.sh build=1 in1=S_16_F0203_22-V52_Replicate-1_E-coli-Vibrio_S22_L004_R1_001_val_1.fq.gz in2=S_16_F0203_22-V52_Replicate-1_E-coli-Vibrio_S22_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_vch_rep_1_%.fq outu1=clean_vch_rep_1_1.fq outu2=clean_vch_rep_1_2.fq
bbsplit.sh build=1 in1=S_16_F0204_23-V52_Replicate-2_E-coli-Vibrio_S23_L004_R1_001_val_1.fq.gz in2=S_16_F0204_23-V52_Replicate-2_E-coli-Vibrio_S23_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_vch_rep_2_%.fq outu1=clean_vch_rep_2_1.fq outu2=clean_vch_rep_2_2.fq
bbsplit.sh build=1 in1=S_16_F0205_24-V52_Replicate-3_E-coli-Vibrio_S24_L004_R1_001_val_1.fq.gz in2=S_16_F0205_24-V52_Replicate-3_E-coli-Vibrio_S24_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_vch_rep_3_%.fq outu1=clean_vch_rep_3_1.fq outu2=clean_vch_rep_3_2.fq

# E36
bbsplit.sh build=1 in1=S_16_F0206_25-E36_Replicate-1_E-coli-Vibrio_S25_L004_R1_001_val_1.fq.gz in2=S_16_F0206_25-E36_Replicate-1_E-coli-Vibrio_S25_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_e36_rep_1_%.fq outu1=clean_e36_rep_1_1.fq outu2=clean_e36_rep_1_2.fq
bbsplit.sh build=1 in1=S_16_F0207_26-E36_Replicate-2_E-coli-Vibrio_S26_L004_R1_001_val_1.fq.gz in2=S_16_F0207_26-E36_Replicate-2_E-coli-Vibrio_S26_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_e36_rep_2_%.fq outu1=clean_e36_rep_2_1.fq outu2=clean_e36_rep_2_2.fq
bbsplit.sh build=1 in1=S_16_F0208_27-E36_Replicate-3_E-coli-Vibrio_S27_L004_R1_001_val_1.fq.gz in2=S_16_F0208_27-E36_Replicate-3_E-coli-Vibrio_S27_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_e36_rep_3_%.fq outu1=clean_e36_rep_3_1.fq outu2=clean_e36_rep_3_2.fq

#VCH+E36 -- merged
bbsplit.sh build=1 in1=S_16_F0212_31-V52-plus-E36_Replicate-1_E-coli-Vibrio_S31_L004_R1_001_val_1.fq.gz in2=S_16_F0212_31-V52-plus-E36_Replicate-1_E-coli-Vibrio_S31_L004_R2_001_val_2.fq.gz ref=merged_VCH_E36.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_vch_and_e36_rep_1_%.fq outu1=clean_vch_and_e36_rep_1_1.fq outu2=clean_vch_and_e36_rep_1_2.fq
bbsplit.sh build=1 in1=S_16_F0213_32-V52-plus-E36_Replicate-2_E-coli-Vibrio_S32_L004_R1_001_val_1.fq.gz in2=S_16_F0213_32-V52-plus-E36_Replicate-2_E-coli-Vibrio_S32_L004_R2_001_val_2.fq.gz ref=merged_VCH_E36.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_vch_and_e36_rep_2_%.fq outu1=clean_vch_and_e36_rep_2_1.fq outu2=clean_vch_and_e36_rep_2_2.fq
bbsplit.sh build=1 in1=S_16_F0214_33-V52-plus-E36_Replicate-3_E-coli-Vibrio_S33_L004_R1_001_val_1.fq.gz in2=S_16_F0214_33-V52-plus-E36_Replicate-3_E-coli-Vibrio_S33_L004_R2_001_val_2.fq.gz ref=merged_VCH_E36.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_vch_and_e36_rep_3_%.fq outu1=clean_vch_and_e36_rep_3_1.fq outu2=clean_vch_and_e36_rep_3_2.fq

#VCH+E36 -- separate genomes
bbsplit.sh build=1 in1=S_16_F0212_31-V52-plus-E36_Replicate-1_E-coli-Vibrio_S31_L004_R1_001_val_1.fq.gz in2=S_16_F0212_31-V52-plus-E36_Replicate-1_E-coli-Vibrio_S31_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_sep_genomes_vch_and_e36_rep_1_%.fq outu1=clean_sep_genomes_vch_and_e36_rep_1_1.fq outu2=clean_sep_genomes_vch_and_e36_rep_1_2.fq
bbsplit.sh build=1 in1=S_16_F0213_32-V52-plus-E36_Replicate-2_E-coli-Vibrio_S32_L004_R1_001_val_1.fq.gz in2=S_16_F0213_32-V52-plus-E36_Replicate-2_E-coli-Vibrio_S32_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_sep_genomes_vch_and_e36_rep_2_%.fq outu1=clean_sep_genomes_vch_and_e36_rep_2_1.fq outu2=clean_sep_genomes_vch_and_e36_rep_2_2.fq
bbsplit.sh build=1 in1=S_16_F0214_33-V52-plus-E36_Replicate-3_E-coli-Vibrio_S33_L004_R1_001_val_1.fq.gz in2=S_16_F0214_33-V52-plus-E36_Replicate-3_E-coli-Vibrio_S33_L004_R2_001_val_2.fq.gz ref=E36.fa,VCH.fa  ambig2=all minratio=0.5 minhits=1 maxindel=100000 basename=out_sep_genomes_vch_and_e36_rep_3_%.fq outu1=clean_sep_genomes_vch_and_e36_rep_3_1.fq outu2=clean_sep_genomes_vch_and_e36_rep_3_2.fq

# split interleaved reads into paired for mapping
# reads mapping only to E36
reformat.sh in=out_e36_rep_1_E36.fq out1=out_e36_rep_1_1.fastq out2=out_e36_rep_1_2.fastq
reformat.sh in=out_e36_rep_2_E36.fq out1=out_e36_rep_2_1.fastq out2=out_e36_rep_2_2.fastq
reformat.sh in=out_e36_rep_3_E36.fq out1=out_e36_rep_3_1.fastq out2=out_e36_rep_3_2.fastq

# reads mapping only to VCH
reformat.sh in=out_vch_rep_1_VCH.fq out1=out_vch_rep_1_1.fastq out2=out_vch_rep_1_2.fastq
reformat.sh in=out_vch_rep_2_VCH.fq out1=out_vch_rep_2_1.fastq out2=out_vch_rep_2_2.fastq
reformat.sh in=out_vch_rep_3_VCH.fq out1=out_vch_rep_3_1.fastq out2=out_vch_rep_3_2.fastq

# co-culture reads mapped against merged genomes
reformat.sh in=out_vch_and_e36_rep_1_merged_VCH_E36.fq out1=out_vch_and_e36_rep_1_1.fastq out2=out_vch_and_e36_rep_1_2.fastq
reformat.sh in=out_vch_and_e36_rep_2_merged_VCH_E36.fq out1=out_vch_and_e36_rep_2_1.fastq out2=out_vch_and_e36_rep_2_2.fastq
reformat.sh in=out_vch_and_e36_rep_3_merged_VCH_E36.fq out1=out_vch_and_e36_rep_3_1.fastq out2=out_vch_and_e36_rep_3_2.fastq

# E36 co-culture reads mapped against separate genomes
reformat.sh in=out_sep_genomes_vch_and_e36_rep_1_E36.fq out1=out_E36_co_culture_rep_1_1.fastq out2=out_E36_co_culture_rep_1_2.fastq
reformat.sh in=out_sep_genomes_vch_and_e36_rep_2_E36.fq out1=out_E36_co_culture_rep_2_1.fastq out2=out_E36_co_culture_rep_2_2.fastq
reformat.sh in=out_sep_genomes_vch_and_e36_rep_3_E36.fq out1=out_E36_co_culture_rep_3_1.fastq out2=out_E36_co_culture_rep_3_2.fastq

# VCH co-culture reads mapped against separategenomes
reformat.sh in=out_sep_genomes_vch_and_e36_rep_1_VCH.fq out1=out_VCH_co_culture_rep_1_1.fastq out2=out_VCH_co_culture_rep_1_2.fastq
reformat.sh in=out_sep_genomes_vch_and_e36_rep_2_VCH.fq out1=out_VCH_co_culture_rep_2_1.fastq out2=out_VCH_co_culture_rep_2_2.fastq
reformat.sh in=out_sep_genomes_vch_and_e36_rep_3_VCH.fq out1=out_VCH_co_culture_rep_3_1.fastq out2=out_VCH_co_culture_rep_3_2.fastq



# use bbmap to align bbsplit reads output
# htseq count
# gff files generated by PATRIC
# assemblies generated by SPades and plasmid SPades

# VCH
bbmap.sh in1=out_vch_rep_1_1.fastq in2=out_vch_rep_1_2.fastq out=vch_rep_1.sam ref=VCH.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_vch_rep_2_1.fastq in2=out_vch_rep_2_2.fastq out=vch_rep_2.sam ref=VCH.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_vch_rep_3_1.fastq in2=out_vch_rep_3_2.fastq out=vch_rep_3.sam ref=VCH.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3

htseq-count -f sam -s yes  -t CDS -i ID vch_rep_1.sam VCH_PATRIC.gff > vch_rep_1_counts
htseq-count -f sam -s yes  -t CDS -i ID vch_rep_2.sam VCH_PATRIC.gff > vch_rep_2_counts
htseq-count -f sam -s yes  -t CDS -i ID vch_rep_3.sam VCH_PATRIC.gff > vch_rep_3_counts

# E36
bbmap.sh in1=out_e36_rep_1_1.fastq in2=out_e36_rep_1_2.fastq out=e36_rep_1.sam ref=E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_e36_rep_2_1.fastq in2=out_e36_rep_2_2.fastq out=e36_rep_2.sam ref=E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_e36_rep_3_1.fastq in2=out_e36_rep_3_2.fastq out=e36_rep_3.sam ref=E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3

htseq-count -f sam -s yes  -t CDS -i ID e36_rep_1.sam E36_PATRIC.gff > e36_rep_1_counts
htseq-count -f sam -s yes  -t CDS -i ID e36_rep_2.sam E36_PATRIC.gff > e36_rep_2_counts
htseq-count -f sam -s yes  -t CDS -i ID e36_rep_3.sam E36_PATRIC.gff > e36_rep_3_counts

# co-culture reads mapped against merged genome 
bbmap.sh in1=out_vch_and_e36_rep_1_1.fastq in2=out_vch_and_e36_rep_1_2.fastq out=vch_and_e36_rep_1.sam ref=merged_VCH_E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_vch_and_e36_rep_2_1.fastq in2=out_vch_and_e36_rep_2_2.fastq out=vch_and_e36_rep_2.sam ref=merged_VCH_E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_vch_and_e36_rep_3_1.fastq in2=out_vch_and_e36_rep_3_2.fastq out=vch_and_e36_rep_3.sam ref=merged_VCH_E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3

htseq-count -f sam -s yes  -t CDS -i ID vch_and_e36_rep_1.sam merged_VCH_E36_PATRIC.gff > vch_and_e36_rep_1_counts
htseq-count -f sam -s yes  -t CDS -i ID vch_and_e36_rep_2.sam merged_VCH_E36_PATRIC.gff > vch_and_e36_rep_2_counts
htseq-count -f sam -s yes  -t CDS -i ID vch_and_e36_rep_3.sam merged_VCH_E36_PATRIC.gff > vch_and_e36_rep_3_counts


# VCH reads from VCH+E36 co-culture mapped against separate genomes
bbmap.sh in1=out_VCH_co_culture_rep_1_1.fastq in2=out_VCH_co_culture_rep_1_2.fastq out=VCH_co_culture_rep_1.sam ref=VCH.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_VCH_co_culture_rep_2_1.fastq in2=out_VCH_co_culture_rep_2_2.fastq out=VCH_co_culture_rep_2.sam ref=VCH.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_VCH_co_culture_rep_3_1.fastq in2=out_VCH_co_culture_rep_3_2.fastq out=VCH_co_culture_rep_3.sam ref=VCH.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3

htseq-count -f sam -s yes  -t CDS -i ID VCH_co_culture_rep_1.sam VCH_PATRIC.gff > VCH_co_culture_rep_1_counts
htseq-count -f sam -s yes  -t CDS -i ID VCH_co_culture_rep_2.sam VCH_PATRIC.gff > VCH_co_culture_rep_2_counts
htseq-count -f sam -s yes  -t CDS -i ID VCH_co_culture_rep_3.sam VCH_PATRIC.gff > VCH_co_culture_rep_3_counts

# E36 reads from VCH+E36 co-culture mapped against separate genomes
bbmap.sh in1=out_E36_co_culture_rep_1_1.fastq in2=out_E36_co_culture_rep_1_2.fastq out=E36_co_culture_rep_1.sam ref=E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_E36_co_culture_rep_2_1.fastq in2=out_E36_co_culture_rep_2_2.fastq out=E36_co_culture_rep_2.sam ref=E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3
bbmap.sh in1=out_E36_co_culture_rep_3_1.fastq in2=out_E36_co_culture_rep_3_2.fastq out=E36_co_culture_rep_3.sam ref=E36.fa nodisk ambig=random xstag=fs intronlen=10 quickmatch=f sam=1.3

htseq-count -f sam -s yes  -t CDS -i ID E36_co_culture_rep_1.sam E36_PATRIC.gff > E36_co_culture_rep_1_counts
htseq-count -f sam -s yes  -t CDS -i ID E36_co_culture_rep_2.sam E36_PATRIC.gff > E36_co_culture_rep_2_counts
htseq-count -f sam -s yes  -t CDS -i ID E36_co_culture_rep_3.sam E36_PATRIC.gff > E36_co_culture_rep_3_counts






